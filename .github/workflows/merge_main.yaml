name: CI/CD

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/head/master/' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  verify:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    permissions:
      id-token: write
      contents: read
      actions: write

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🧰 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: 💽 Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: 📦 Install Dependencies
        run: yarn install

      - name: ✨ Linting
        run: yarn lint

      - name: 🧪 Tests
        run: yarn test:unit

      - name: 📊 Code Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
          flags: unittests
          fail_ci_if_error: true

      - name: 🏗️ Build
        run: yarn build

      - name: ❌ Cancel Workflow
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.cancelWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            })

  test-integration:
    runs-on: ubuntu-20.04
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3
        with:
          path: .

      - name: 🧪 Test Draw
        uses: crisboarna/cfn-diagram-action@master
        with:
          path_input: test/data/input/**/*.yaml
          path_output: /dia
          viewport_width: 1920
          viewport_height: 1080
          diagram_type: d

      - name: 🧪 Verify API Draw
        run: diff dia/API.drawio test/data/output/draw/API.drawio

      - name: 🧪 Verify VPC_ELB Draw
        run: diff dia/vpc/VPC_ELB.drawio test/data/output/draw/VPC_ELB.drawio

      - name: 🧪 Verify VPC_Redshift Draw
        run: diff dia/vpc/VPC_Redshift.drawio test/data/output/draw/VPC_Redshift.drawio

      - name: 🧪 Test Html
        uses: crisboarna/cfn-diagram-action@master
        with:
          path_input: test/data/input/**/*.yaml
          path_output: /dia
          viewport_width: 1920
          viewport_height: 1080
          diagram_type: h

      # Vis.js generates nodes in random positions, simple base64 or img diff tools will have too low similarity to be of value
      - name: 🧪 Verify API Html
        run: test -e dia/API.png

      - name: 🧪 Verify VPC_ELB Html
        run: test -e dia/vpc/VPC_ELB.png

      - name: 🧪 Verify VPC_Redshift Html
        run: test -e dia/vpc/VPC_Redshift.png

  release:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    needs:
      - verify
      - test-integration

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🧰 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: 💽 Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: 📦 Install Dependencies
        run: yarn install

      - name: 🚀 Release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
